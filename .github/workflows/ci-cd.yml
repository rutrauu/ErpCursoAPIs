# Configuração para GitHub Actions - Sistema de Gestão Acadêmica
name: CI/CD Pipeline - Academic Management System

on:
  push:
    branches: [ main, develop, feat/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-security:
    runs-on: ubuntu-latest
    name: Lint & Security Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
    
    - name: Security audit
      run: npm audit --audit-level moderate
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    needs: lint-and-security
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run Academic Management Tests
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test_jwt_secret_for_github_actions
        JWT_EXPIRES_IN: 1h
    
    - name: Generate coverage report
      run: npm test -- --coverage --coverageReporters=text-lcov > coverage.lcov
      if: matrix.node-version == '18.x'
    
    - name: Upload coverage to GitHub
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '18.x'
      with:
        name: coverage-report
        path: coverage/

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: |
        echo "Preparing Academic Management System for production..."
        npm prune --production
    
    - name: Create deployment artifact
      run: |
        tar -czf academic-system-${{ github.sha }}.tar.gz --exclude=node_modules --exclude=.git .
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: academic-system-build
        path: academic-system-${{ github.sha }}.tar.gz